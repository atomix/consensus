/*
SPDX-FileCopyrightText: 2022-present Open Networking Foundation <info@opennetworking.org>

SPDX-License-Identifier: Apache-2.0
*/

syntax = "proto3";

package atomix.multiraft.multimap.v1;

import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "gogoproto/gogo.proto";

message MultiMapListener {
    uint64 index = 1 [
        (gogoproto.casttype) = "github.com/atomix/multi-raft-storage/api/atomix/multiraft/v1.Index"
    ];
    string key = 2;
}

message MultiMapEntry {
    string key = 1;
    repeated string values = 2;
}

message MultiMapInput {
    oneof input {
        SizeInput size = 1;
        PutInput put = 2;
        PutAllInput put_all = 3;
        ReplaceInput replace = 4;
        ContainsInput contains = 5;
        GetInput get = 6;
        RemoveInput remove = 7;
        RemoveAllInput remove_all = 8;
        ClearInput clear = 9;
        EntriesInput entries = 10;
        EventsInput events = 11;
    }
}

message MultiMapOutput {
    oneof output {
        SizeOutput size = 1;
        PutOutput put = 2;
        PutAllOutput put_all = 3;
        ReplaceOutput replace = 4;
        ContainsOutput contains = 5;
        GetOutput get = 6;
        RemoveOutput remove = 7;
        RemoveAllOutput remove_all = 8;
        ClearOutput clear = 9;
        EntriesOutput entries = 10;
        EventsOutput events = 11;
    }
}

message SizeInput {

}

message SizeOutput {
    uint32 size = 1;
}

message PutInput {
    string key = 1;
    string value = 2;
}

message PutOutput {

}

message PutAllInput {
    string key = 1;
    repeated string values = 2;
}

message PutAllOutput {
    bool updated = 1;
}

message ReplaceInput {
    string key = 1;
    repeated string values = 2;
}

message ReplaceOutput {
    repeated string prev_values = 1;
}

message GetInput {
    string key = 1;
}

message GetOutput {
    repeated string values = 1;
}

message ContainsInput {
    string key = 1;
    string value = 2;
}

message ContainsOutput {
    bool result = 1;
}

message RemoveInput {
    string key = 1;
    string value = 2;
}

message RemoveOutput {

}

message RemoveAllInput {
    string key = 1;
}

message RemoveAllOutput {
    repeated string values = 1;
}

message ClearInput {

}

message ClearOutput {

}

message EntriesInput {
    bool watch = 1;
}

message EntriesOutput {
    Entry entry = 1 [
        (gogoproto.nullable) = false
    ];
}

message EventsInput {
    string key = 1;
}

message EventsOutput {
    Event event = 1 [
        (gogoproto.nullable) = false
    ];
}

message Event {
    string key = 1;

    oneof event {
        Added added = 2;
        Removed removed = 3;
    }

    message Added {
        string value = 1;
    }

    message Removed {
        string value = 1;
    }
}

message Entry {
    string key = 1;
    string value = 2;
}
