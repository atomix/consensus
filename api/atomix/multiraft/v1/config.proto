/*
SPDX-FileCopyrightText: 2022-present Open Networking Foundation <info@opennetworking.org>

SPDX-License-Identifier: Apache-2.0
*/

syntax = "proto3";

package atomix.multiraft.v1;

import "google/protobuf/duration.proto";
import "gogoproto/gogo.proto";

message MultiRaftConfig {
    google.protobuf.Duration heartbeat_period = 1 [
        (gogoproto.stdduration) = true
    ];
    google.protobuf.Duration election_timeout = 2 [
        (gogoproto.stdduration) = true
    ];
    uint64 snapshot_entry_threshold = 3;
    uint64 compaction_retain_entries = 4;
    string data_dir = 5;
}

message NodeConfig {
    string host = 1;
    int32 port = 2;
    MultiRaftConfig config = 3 [
        (gogoproto.nullable) = false,
        (gogoproto.embed) = true
    ];
}

message GroupConfig {
    uint32 group_id = 1 [
        (gogoproto.customname) = "GroupID",
        (gogoproto.casttype) = "GroupID"
    ];
    uint32 member_id = 2 [
        (gogoproto.customname) = "MemberID",
        (gogoproto.casttype) = "MemberID"
    ];
    MemberRole role = 3;
    repeated MemberConfig members = 4 [
        (gogoproto.nullable) = false
    ];
}

enum MemberRole {
    UNKNOWN = 0;
    MEMBER = 1;
    OBSERVER = 2;
    WITNESS = 3;
}

message MemberConfig {
    uint32 member_id = 1 [
        (gogoproto.customname) = "MemberID",
        (gogoproto.casttype) = "MemberID"
    ];
    string host = 2;
    int32 port = 3;
}

message DriverConfig {
    repeated PartitionConfig partitions = 1 [
        (gogoproto.nullable) = false
    ];
    google.protobuf.Duration session_timeout = 2 [
        (gogoproto.stdduration) = true
    ];
}

message PartitionConfig {
    uint32 partition_id = 1 [
        (gogoproto.customname) = "PartitionID",
        (gogoproto.casttype) = "PartitionID",
        (gogoproto.jsontag) = "partitionId"
    ];
    string leader = 2;
    repeated string followers = 3;
}
