/*
SPDX-FileCopyrightText: 2022-present Open Networking Foundation <info@opennetworking.org>

SPDX-License-Identifier: Apache-2.0
*/

syntax = "proto3";

package atomix.multiraft.v1;

import "google/protobuf/timestamp.proto";
import "gogoproto/gogo.proto";
import "atomix/multiraft/v1/config.proto";
import "atomix/multiraft/v1/headers.proto";

service Node {
    rpc Bootstrap(BootstrapRequest) returns (BootstrapResponse);
    rpc Join(JoinRequest) returns (JoinResponse);
    rpc Leave(LeaveRequest) returns (LeaveResponse);
    rpc Watch(WatchNodeRequest) returns (stream NodeEvent);
}

message BootstrapRequest {
    ClusterConfig cluster = 1 [
        (gogoproto.nullable) = false
    ];
}

message BootstrapResponse {

}

message JoinRequest {
    PartitionConfig partition = 1 [
        (gogoproto.nullable) = false
    ];
}

message JoinResponse {

}

message LeaveRequest {
    uint32 partition_id = 1 [
        (gogoproto.customname) = "PartitionID",
        (gogoproto.casttype) = "PartitionID"
    ];
}

message LeaveResponse {

}

message WatchNodeRequest {

}

message NodeEvent {
    google.protobuf.Timestamp timestamp = 1 [
        (gogoproto.nullable) = false,
        (gogoproto.stdtime) = true
    ];
    oneof event {
        ConnectionEstablishedEvent connection_established = 2;
        ConnectionFailedEvent connection_failed = 3;
    }
}

message ConnectionInfo {
    string address = 1;
    bool snapshot = 2;
}

message ConnectionEstablishedEvent {
    ConnectionInfo info = 1 [
        (gogoproto.nullable) = false,
        (gogoproto.embed) = true
    ];
}

message ConnectionFailedEvent {
    ConnectionInfo info = 1 [
        (gogoproto.nullable) = false,
        (gogoproto.embed) = true
    ];
}
