/*
SPDX-FileCopyrightText: 2022-present Open Networking Foundation <info@opennetworking.org>

SPDX-License-Identifier: Apache-2.0
*/

syntax = "proto3";

package atomix.multiraft.v1;

import "google/protobuf/timestamp.proto";
import "gogoproto/gogo.proto";
import "atomix/multiraft/v1/config.proto";
import "atomix/multiraft/v1/headers.proto";
import "atomix/multiraft/v1/fsm.proto";

service Partition {
    rpc OpenSession(OpenSessionRequest) returns (OpenSessionResponse);
    rpc KeepAlive(KeepAliveRequest) returns (KeepAliveResponse);
    rpc CloseSession(CloseSessionRequest) returns (CloseSessionResponse);
}

message OpenSessionRequest {
    PartitionRequestHeaders headers = 1;
    OpenSessionInput input = 2 [
        (gogoproto.embed) = true
    ];
}

message OpenSessionResponse {
    PartitionResponseHeaders headers = 1;
    OpenSessionOutput output = 2 [
        (gogoproto.embed) = true
    ];
}

message KeepAliveRequest {
    PartitionRequestHeaders headers = 1;
    KeepAliveInput input = 2 [
        (gogoproto.embed) = true
    ];
}

message KeepAliveResponse {
    PartitionResponseHeaders headers = 1;
    KeepAliveOutput output = 2 [
        (gogoproto.embed) = true
    ];
}

message CloseSessionRequest {
    PartitionRequestHeaders headers = 1;
    CloseSessionInput input = 2 [
        (gogoproto.embed) = true
    ];
}

message CloseSessionResponse {
    PartitionResponseHeaders headers = 1;
    CloseSessionOutput output = 2 [
        (gogoproto.embed) = true
    ];
}
